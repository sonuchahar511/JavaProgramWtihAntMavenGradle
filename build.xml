<?xml version = "1.0"?>
<project name = "QueryBrowserApp" basedir = "." default = "build">
   <property name ="jar.dir"        value="distt"/>
   <property name = "src.dir"       value = "src"/>
   <property name = "build.dir"     value = "build1/classes"/>
   <property name = "jar.file"      value = "${jar.dir}/QueryBrowserApp.jar"/>
   <property name = "name"          value = "QueryBrowserApp"/>
   <property name ="main-class"     value="com.chahar.jdbc.QueryBrowserApp"/>

   <path id = "libraries-path">
      <fileset dir = "lib">
         <include name = "*.jar"/>
      </fileset>
   </path>
   <path id = "master-classpath">
      <fileset dir = "lib">
         <include name = "*.jar"/>
      </fileset>
      <pathelement path = "${build.dir}"/>
   </path>

   <target name = "build" description = "Compile source tree java files">
      <mkdir dir = "${build.dir}"/>
      <javac destdir = "${build.dir}" source = "1.8" target = "1.8">
         <src path = "${src.dir}"/>
         <classpath refid = "libraries-path"/>
      </javac>
    </target>
 
   <target name = "clean" description = "Clean output directories">
      <delete>
         <fileset dir = "${build.dir}">
            <include name = "**/*.class"/>
         </fileset>
      </delete>
	<delete dir="${jar.dir}"/>
	<delete dir="${build.dir}/lib"/>
   </target>
    <target name="jar" depends="build">
        <mkdir dir="${jar.dir}"/>
        <copy todir="${build.dir}/lib" flatten="true">
            <path refid="libraries-path"/>
        </copy>

        <!--<manifestclasspath property="manifest.classpath" jarfile="${jar.file}">
            <classpath refid="master-classpath"/>
        </manifestclasspath>-->

        <jar destfile="${jar.file}" basedir="${build.dir}" includes = "./**">
           <!-- <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
                <attribute name="Class-Path" value="${manifest.classpath}"/>
            </manifest>-->
        </jar>  
    </target>

    <target name="run" depends="jar">
        <java jar="${jar.file}" fork="true"/>
    </target>
</project>
